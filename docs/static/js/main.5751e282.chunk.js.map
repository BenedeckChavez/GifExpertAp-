{"version":3,"sources":["components/AddCategory.js","helpers/getGif.js","components/GifGridItem.js","components/GifGrid.js","hooks/useFetchGifs.js","GifExpertApp.js","index.js"],"names":["AddCategory","setCategories","useState","inputValue","setInputValue","onSubmit","e","preventDefault","trim","length","cat","type","value","onChange","target","getGif","categorie","a","url","encodeURI","fetch","resp","json","data","gifs","map","img","id","title","images","downsized_medium","GifGridItem","console","log","className","src","alt","GifGrid","category","loading","state","setState","useEffect","then","imgs","useFetchGifs","GifExpertApp","categories","ReactDOM","render","document","getElementById"],"mappings":"mMAsCeA,EAnCK,SAAC,GAAqB,IAApBC,EAAmB,EAAnBA,cAElB,EAAoCC,mBAAS,IAA7C,mBAAOC,EAAP,KAAmBC,EAAnB,KAeA,OACI,mCACI,sBAAMC,SAXO,SAACC,GAClBA,EAAEC,iBACCJ,EAAWK,OAAOC,OAAS,IAE1BR,GAAc,SAAAS,GAAG,OAAKP,GAAL,mBAAmBO,OACpCN,EAAc,MAMd,SACI,uBACIO,KAAK,OACLC,MAAOT,EACPU,SAnBQ,SAACP,GACrBF,EAAcE,EAAEQ,OAAOF,e,+BCRjBG,EAAM,uCAAG,WAAOC,GAAP,uBAAAC,EAAA,6DAEbC,EAFa,iDAEmCC,UAAUH,GAF7C,+DAGAI,MAAMF,GAHN,cAGbG,EAHa,gBAIEA,EAAKC,OAJP,uBAIZC,EAJY,EAIZA,KAEDC,EAAOD,EAAKE,KAAI,SAAAC,GAAQ,IAAD,EAMzB,MALa,CACTC,GAAID,EAAIC,GACRC,MAAOF,EAAIE,MACXV,IAAG,UAAEQ,EAAIG,cAAN,aAAE,EAAYC,iBAAiBZ,QAVvB,kBAeZM,GAfY,4CAAH,sDCcLO,EAZK,SAAC,GAAsB,IAApBJ,EAAmB,EAAnBA,GAAGC,EAAgB,EAAhBA,MAAMV,EAAU,EAAVA,IAI5B,OADAc,QAAQC,IAAIN,EAAGC,EAAMV,GAEjB,sBAAKgB,UAAU,6CAAf,UACI,qBAAKC,IAAKjB,EAAKkB,IAAKR,IACpB,4BAAIA,QCYDS,EAjBC,SAAC,GAAgB,IAAfC,EAAc,EAAdA,SAGd,ECJwB,SAACA,GACzB,MAA0BpC,mBAAS,CAC/BqB,KAAK,GACLgB,SAAQ,IAFZ,mBAAOC,EAAP,KAAcC,EAAd,KAkBA,OAbAC,qBAAU,WAEN3B,EAAOuB,GAAUK,MAAK,SAAAC,GAElBH,EAAS,CACLlB,KAAKqB,EACLL,SAAQ,SAIlB,CAACD,IAGIE,EDfuBK,CAAaP,GAA/BT,EAAZ,EAAON,KAAYgB,EAAnB,EAAmBA,QAEnB,OACI,qCACI,oBAAKL,UAAU,wCAAf,SAAwDI,IACtDC,GAAW,oBAAIL,UAAU,mCAAd,yBAEb,qBAAKA,UAAU,YAAf,SACML,EAAOJ,KAAI,SAAAC,GAAG,OAAK,cAAC,EAAD,eAA8BA,GAAZA,EAAIC,aES5CmB,EAnBM,WAEjB,MAAoC5C,mBAAS,CAAC,SAA9C,mBAAO6C,EAAP,KAAmB9C,EAAnB,KAEA,OACI,qCACI,8CACI,cAAC,EAAD,CAAaA,cAAeA,IAChC,uBAEA,6BAEQ8C,EAAWtB,KAAI,SAAAf,GAAG,OAAI,cAAC,EAAD,CAAmB4B,SAAU5B,GAAfA,Y,MCbxDsC,IAASC,OACL,cAAC,EAAD,IACAC,SAASC,eAAe,W","file":"static/js/main.5751e282.chunk.js","sourcesContent":["import React, { useState } from 'react'\r\nimport PropTypes from 'prop-types';\r\n\r\nconst AddCategory = ({setCategories}) => {\r\n\r\n    const [inputValue, setInputValue] = useState('');\r\n\r\n    const handle_onChange = (e) => {\r\n        setInputValue(e.target.value)\r\n    };\r\n\r\n    const handle_Sumit = (e) => {\r\n        e.preventDefault();\r\n        if(inputValue.trim().length > 2)\r\n        {\r\n            setCategories(cat => [inputValue,...cat]);\r\n            setInputValue('');\r\n        }\r\n    }\r\n\r\n    return (\r\n        <>\r\n            <form onSubmit={handle_Sumit}>\r\n                <input\r\n                    type=\"text\"\r\n                    value={inputValue}\r\n                    onChange= {handle_onChange}\r\n                />\r\n            </form>\r\n        </>\r\n    )\r\n}\r\n\r\n\r\nAddCategory.propTypes = {\r\n    setCategories: PropTypes.func.isRequired\r\n}\r\n\r\nexport default AddCategory\r\n","export const  getGif = async (categorie) => {\r\n       \r\n    const url = `https://api.giphy.com/v1/gifs/search?q=${encodeURI(categorie)}&limit=10&api_key=5Vk2AyiDQBz9QOshtiC3jXO8iiTNX6ne` ;\r\n    const resp = await fetch(url);\r\n    const {data} = await resp.json();\r\n\r\n    const gifs = data.map(img => {\r\n        const json = {\r\n            id: img.id,\r\n            title: img.title,\r\n            url: img.images?.downsized_medium.url};\r\n\r\n        return json;\r\n    })\r\n\r\n    return gifs;\r\n};\r\n\r\n","import React from 'react'\r\n\r\nconst GifGridItem = ( {id,title,url} ) => {\r\n\r\n\r\n    console.log(id,title,url);\r\n    return (\r\n        <div className=\"card animate__animated animate__backInDown\">\r\n            <img src={url} alt={title}></img>\r\n            <p>{title}</p>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default GifGridItem\r\n","import React from 'react'\r\nimport { useFetchGifs } from '../hooks/useFetchGifs'\r\nimport GifGridItem from './GifGridItem';\r\n\r\nconst GifGrid = ({category}) => {\r\n\r\n\r\n    const {data:images,loading} = useFetchGifs(category);\r\n\r\n    return (\r\n        <>\r\n            <h3  className=\"animate__animated animate__backInDown\">{category}</h3>\r\n            { loading && <h3 className=\"animate__animated animate__hinge\">Cargando...</h3> }\r\n\r\n            <div className=\"card-grid\">\r\n                { images.map(img => (<GifGridItem key={img.id} {...img} />) ) }\r\n            </div>\r\n        </>\r\n    )\r\n}\r\n\r\nexport default GifGrid\r\n","import { useEffect, useState } from \"react\"\r\nimport { getGif } from \"../helpers/getGif\"\r\n\r\nexport const useFetchGifs = (category) => {\r\n    const [state, setState] = useState({\r\n        data:[],\r\n        loading:true\r\n    })\r\n\r\n    useEffect(() => {\r\n\r\n        getGif(category).then(imgs => { \r\n            \r\n            setState({\r\n                data:imgs,\r\n                loading:false\r\n            }) \r\n        })\r\n\r\n    },[category])\r\n    \r\n\r\n    return state;\r\n}","\r\nimport React, { useState } from 'react'\r\nimport AddCategory from './components/AddCategory';\r\nimport GifGrid from './components/GifGrid';\r\n\r\nconst GifExpertApp = () => {\r\n\r\n    const [categories, setCategories] = useState(['Goku'] );\r\n\r\n    return (\r\n        <>\r\n            <h2>GifExpertApp</h2>\r\n                <AddCategory setCategories={setCategories}></AddCategory>\r\n            <hr/>\r\n\r\n            <ol>\r\n                {\r\n                    categories.map(cat => <GifGrid key={cat} category={cat}/>)\r\n                }\r\n            </ol>\r\n        </>\r\n    )\r\n}\r\n\r\nexport default GifExpertApp\r\n","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport GifExpertApp from './GifExpertApp';\r\nimport \"./index.css\";\r\nReactDOM.render(\r\n    <GifExpertApp />,\r\n    document.getElementById('root')\r\n);\r\n\r\n\r\n"],"sourceRoot":""}